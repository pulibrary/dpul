---
version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.2.5
  node: circleci/node@5.0.2
jobs:
  build:
    working_directory: ~/dpul
    docker:
      # The primary container is an instance of the first list image listed. Your build commands run in this container.
      - image: cimg/ruby:2.7.5-browsers
        environment:
          RAILS_ENV: test
          NODE_ENV: test
          POMEGRANATE_DB_HOST: localhost
          POMEGRANATE_DB_USERNAME: pomegranate
          POMEGRANATE_DB_PASSWORD: ""
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - restore_cache:
          keys:
            - dpul-{{ checksum "Gemfile.lock" }}
            - dpul-yarn-{{ checksum "yarn.lock" }}
      # Install bundler / yarn
      - run: gem install bundler -v '~> 2.0'
      - node/install:
          install-yarn: true
          node-version: '14.19.0'
      # Install dependencies
      - run: bundle config set --local path "vendor/bundle"
      - run: bundle install
      - run:
          name: Install NPM dependencies via Yarn
          command: yarn install --frozen-lockfile
      # Cache Dependencies
      - save_cache:
          name: Save Yarn Package Cache
          key: dpul-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          name: Save bundle cache
          key: dpul-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - persist_to_workspace:
          root: '~/dpul'
          paths: '*'
  rubocop:
    working_directory: ~/dpul
    docker:
      - image: cimg/ruby:2.7.5-browsers
        environment:
          RAILS_ENV: test
          POMEGRANATE_DB_HOST: localhost
          POMEGRANATE_DB_USERNAME: pomegranate
          POMEGRANATE_DB_PASSWORD: ""
    steps:
      - attach_workspace:
          at: '~/dpul'
      # Install Bundler
      - run: gem install bundler -v '~> 2.0'
      # Bundle install dependencies
      - run: bundle config set --local path "vendor/bundle"
      - run: bundle install
      - run: bundle exec rake rubocop
  test:
    working_directory: ~/dpul
    docker:
      - image: cimg/ruby:2.7.5-browsers
        environment:
          RAILS_ENV: test
          POMEGRANATE_DB_HOST: localhost
          POMEGRANATE_DB_USERNAME: pomegranate
          POMEGRANATE_DB_PASSWORD: ""
          SOLR_URL: "http://localhost:8984/solr/blacklight-core-test"
      - image: postgres:10.3
        environment:
          POSTGRES_DB: dpul_test
          POSTGRES_USER: pomegranate
          POSTGRES_PASSWORD: ""
      - image: solr:7.7-alpine
        command: bin/solr -cloud -noprompt -f -p 8984
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - attach_workspace:
          at: '~/dpul'
      # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - node/install:
          install-yarn: true
          node-version: '14.19.0'
      # Install Bundler
      - run: gem install bundler -v '~> 2.0'
      # Bundle install dependencies
      - run: bundle config set --local path "vendor/bundle"
      - run: bundle install
      - run:
          name: Load config into solr
          command: |
            cd ~/dpul/solr/config
            zip -1 -r solr_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://localhost:8984/solr/admin/configs?action=UPLOAD&name=dpul"
            curl -H 'Content-type: application/json' http://localhost:8984/api/collections/ -d '{create: {name: blacklight-core-test, config: dpul, numShards: 1}}'
      - run: bundle exec rake db:create
      - run: bundle exec rake db:migrate
      - run: bundle exec rspec spec
      - store_artifacts:
          path: coverage

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
      - rubocop:
          requires:
            - build
      - test:
          requires:
            - build
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - build
      - rubocop:
          requires:
            - build
      - test:
          requires:
            - build
